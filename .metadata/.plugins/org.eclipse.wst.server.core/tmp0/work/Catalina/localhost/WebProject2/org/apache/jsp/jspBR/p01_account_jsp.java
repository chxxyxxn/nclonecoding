/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2022-07-26 00:56:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jspBR;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sns.dao.*;
import com.sns.dto.*;
import java.util.*;

public final class p01_account_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("com.sns.dao");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("com.sns.dto");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\t <!-- <link rel=\"stylesheet\" href=\"../css/p01.account.css\"/> -->\n");
      out.write("\t<script src=\"https://kit.fontawesome.com/e7325946e1.js\" crossorigin=\"anonymous\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<title>프로필관리</title>\n");
      out.write("<script src=\"../js/jquery-3.6.0.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<style>\n");
      out.write("\n");
      out.write("body {\n");
      out.write("    background-color: #141414;\n");
      out.write("    margin: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write(".top-bar {\n");
      out.write("    position: fixed;\n");
      out.write("    padding: 0 22px;\n");
      out.write("    top: 0;\n");
      out.write("    left: 0;\n");
      out.write("    right: 0;\n");
      out.write("    z-index: 20;\n");
      out.write("    width: 100%;\n");
      out.write("    background-image: linear-gradient(to bottom, rgba(0,0,0,0.7) 10%, rgba(0,0,0,0));/*탑바 그라데이션*/\n");
      out.write("    height: 68px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write(".logo {\n");
      out.write("    position: absolute;\n");
      out.write("    left: 45px;\n");
      out.write("    top: 0;\n");
      out.write("    text-decoration: none;\n");
      out.write("    padding: 18px 0;\n");
      out.write("    font-size: 32px;\n");
      out.write("    display: inline-block;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    cursor: pointer;\n");
      out.write("    width: 120px;\n");
      out.write("    height: 32px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".svg--netflix-logo {\n");
      out.write("    fill: #e50914;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write(".pinning-header .main-header .logo {\n");
      out.write("    font-size: 25px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".pinning-header .main-header .logo {\n");
      out.write("    text-decoration: none;\n");
      out.write("    /* font-size: 1.8em; */\n");
      out.write("    color: #E50914;\n");
      out.write("    display: inline-block;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    cursor: pointer;\n");
      out.write("    /* margin-right: 5px; */\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("/*------------------------------------------------------*/\n");
      out.write("\n");
      out.write(".profile-gate-label {\n");
      out.write("    /*프로필 관리 텍스트*/\n");
      out.write("    width: 100%;\n");
      out.write("    color: #fff;\n");
      out.write("    font-size: 3.5vw;\n");
      out.write("    font-weight: unset;\n");
      out.write("    text-align: center;\n");
      out.write("    /* position: absolute; */\n");
      out.write("    /* top: 237px; */\n");
      out.write("    display: block;\n");
      out.write("\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* .list-profiles .choose-profile {\n");
      out.write("    margin: 2em 0;\n");
      out.write("    \n");
      out.write("} */\n");
      out.write("\n");
      out.write("\n");
      out.write(".choose-profile {\n");
      out.write("    margin: 2em 0;\n");
      out.write("    opacity: 1;\n");
      out.write("    transition: opacity 400ms ease-out;\n");
      out.write("    /* position: absolute; */\n");
      out.write("    /* left: 453px; */\n");
      out.write("    /* width: 100%; */\n");
      out.write("    /* display: inline; */\n");
      out.write("    /* display: flex;\n");
      out.write("    text-align: center; */\n");
      out.write("\n");
      out.write("\n");
      out.write("}\n");
      out.write(".profile-icon {\n");
      out.write("    filter: brightness(50%);\n");
      out.write("    \n");
      out.write("  }\n");
      out.write("\n");
      out.write(".svg-edit-overlay:hover {\n");
      out.write("    border: 2px solid gray;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    \n");
      out.write("} \n");
      out.write("\n");
      out.write(".profile-edit-mode:hover{\n");
      out.write("    object-fit:cover;     \n");
      out.write("    transform:scale(1.4);        \n");
      out.write("    transition: 0.2s; \n");
      out.write("  \n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write(".profile .profile-icon:hover{\n");
      out.write("    border: 2px solid #fff;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    transform: scale(1.2);\n");
      out.write("    transition: all 0.2s linear;\n");
      out.write("}\n");
      out.write("\n");
      out.write("image:hover {\n");
      out.write("    transform: scale(1.2);\n");
      out.write("    transition: all 0.2s linear;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write(".list-profiles {\n");
      out.write("    max-width: 80%;\n");
      out.write("    \n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write(".profiles-gate-container .centered-div {\n");
      out.write("    z-index: 100;\n");
      out.write("    position: absolute;\n");
      out.write("    top: -104px;\n");
      out.write("    left: 0;\n");
      out.write("    right: 0;\n");
      out.write("    bottom: 0;\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    align-items: center;\n");
      out.write("    flex-direction: column;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profiles-gate-container li.profile {\n");
      out.write("    width: 10vw;\n");
      out.write("    max-width: 200px;\n");
      out.write("    min-width: 84px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".list-profiles .choose-profile {\n");
      out.write("    margin: 2em 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profiles-gate-container ul {\n");
      out.write("    padding: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile .profile-icon {\n");
      out.write("    height: 10vw;\n");
      out.write("    width: 10vw;\n");
      out.write("    max-height: 200px;\n");
      out.write("    max-width: 200px;\n");
      out.write("    min-height: 84px;\n");
      out.write("    min-width: 84px;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    position: relative;\n");
      out.write("    text-decoration: none;\n");
      out.write("    background-repeat: no-repeat;\n");
      out.write("    background-size: cover;\n");
      out.write("    background-color: #333;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    border: none;\n");
      out.write("    margin-right: 20px;\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write(".list-profiles .avatar-wrapper {\n");
      out.write("    position: relative;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".list-profiles .svg-edit-overlay {\n");
      out.write("    /*솔드아웃 ,크림 프로필 연필아이콘*/\n");
      out.write("    position: absolute;\n");
      out.write("    top: 0;\n");
      out.write("    left: 0;\n");
      out.write("    right: 0;\n");
      out.write("    bottom: 0;\n");
      out.write("    color: #fff;\n");
      out.write("    display: flex;\n");
      out.write("    -webkit-box-align: center;\n");
      out.write("    align-items: center;\n");
      out.write("    -webkit-box-pack: center;\n");
      out.write("    justify-content: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".list-profiles .svg-edit-overlay .svg-icon-edit {\n");
      out.write("    width: 3rem;\n");
      out.write("    height: 3rem;\n");
      out.write("    max-width: 70px;\n");
      out.write("    max-height: 70px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profiles-gate-container .profile-name {\n");
      out.write("    line-height: 1.2em;\n");
      out.write("    min-height: 1.8em;\n");
      out.write("    color: #808080;\n");
      out.write("    display: block;\n");
      out.write("    text-align: center;\n");
      out.write("    font-size: 1.3vw;\n");
      out.write("    margin: 0.6em 0;\n");
      out.write("    text-overflow: ellipsis;\n");
      out.write("    overflow: hidden;\n");
      out.write("    \n");
      out.write("}\n");
      out.write("\n");
      out.write("a {\n");
      out.write("    text-decoration: none;\n");
      out.write("    cursor: pointer;\n");
      out.write("    color: #fff;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profiles-gate-container .addProfileIcon {\n");
      out.write("    font-size: 5vw;\n");
      out.write("    color: #808080;\n");
      out.write("    text-align: center;\n");
      out.write("    text-decoration: none;\n");
      out.write("    height: 10vw;\n");
      out.write("    width: 10vw;\n");
      out.write("    max-height: 200px;\n");
      out.write("    max-width: 200px;\n");
      out.write("    min-height: 84px;\n");
      out.write("    min-width: 84px;\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    justify-content: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("li {\n");
      out.write("    float: left;\n");
      out.write("    margin-right: 25px;\n");
      out.write("    list-style: none;\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile-button.preferred-action {\n");
      out.write("    background: #fff;\n");
      out.write("    color: #000;\n");
      out.write("    border: 1px solid #fff;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile-button {\n");
      out.write("    display: block;\n");
      out.write("    margin: 2em 0 1em 0;\n");
      out.write("    font-size: 1.2vw;\n");
      out.write("    border: 1px solid #808080;\n");
      out.write("    color: #808080;\n");
      out.write("    padding: 0.5em 1.5em;\n");
      out.write("    letter-spacing: 2px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    background-color: transparent;\n");
      out.write("    text-decoration:none;\n");
      out.write("}\n");
      out.write(".profile-button:hover{\n");
      out.write("    transform:scale(1.1);        \n");
      out.write("    transition: 0.2s;\n");
      out.write("    \n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<body>\n");
      out.write("    <div class=\"hearder-top\">\n");
      out.write("        <div class=\"top-bar\">\n");
      out.write("            <div class=\"logo\" float:left>\n");
      out.write("                <a href=\"\">\n");
      out.write("                    <svg viewBox=\"0 0 111 30\" class=\"svg--netflix-logo\" aria-hidden=\"true\" focusable=\"false\">\n");
      out.write("                        <g id=\"netflix-logo\">\n");
      out.write("                            <path\n");
      out.write("                                d=\"M105.06233,14.2806261 L110.999156,30 C109.249227,29.7497422 107.500234,29.4366857 105.718437,29.1554972 L102.374168,20.4686475 L98.9371075,28.4375293 C97.2499766,28.1563408 95.5928391,28.061674 93.9057081,27.8432843 L99.9372012,14.0931671 L94.4680851,-5.68434189e-14 L99.5313525,-5.68434189e-14 L102.593495,7.87421502 L105.874965,-5.68434189e-14 L110.999156,-5.68434189e-14 L105.06233,14.2806261 Z M90.4686475,-5.68434189e-14 L85.8749649,-5.68434189e-14 L85.8749649,27.2499766 C87.3746368,27.3437061 88.9371075,27.4055675 90.4686475,27.5930265 L90.4686475,-5.68434189e-14 Z M81.9055207,26.93692 C77.7186241,26.6557316 73.5307901,26.4064111 69.250164,26.3117443 L69.250164,-5.68434189e-14 L73.9366389,-5.68434189e-14 L73.9366389,21.8745899 C76.6248008,21.9373887 79.3120255,22.1557784 81.9055207,22.2804387 L81.9055207,26.93692 Z M64.2496954,10.6561065 L64.2496954,15.3435186 L57.8442216,15.3435186 L57.8442216,25.9996251 L53.2186709,25.9996251 L53.2186709,-5.68434189e-14 L66.3436123,-5.68434189e-14 L66.3436123,4.68741213 L57.8442216,4.68741213 L57.8442216,10.6561065 L64.2496954,10.6561065 Z M45.3435186,4.68741213 L45.3435186,26.2498828 C43.7810479,26.2498828 42.1876465,26.2498828 40.6561065,26.3117443 L40.6561065,4.68741213 L35.8121661,4.68741213 L35.8121661,-5.68434189e-14 L50.2183897,-5.68434189e-14 L50.2183897,4.68741213 L45.3435186,4.68741213 Z M30.749836,15.5928391 C28.687787,15.5928391 26.2498828,15.5928391 24.4999531,15.6875059 L24.4999531,22.6562939 C27.2499766,22.4678976 30,22.2495079 32.7809542,22.1557784 L32.7809542,26.6557316 L19.812541,27.6876933 L19.812541,-5.68434189e-14 L32.7809542,-5.68434189e-14 L32.7809542,4.68741213 L24.4999531,4.68741213 L24.4999531,10.9991564 C26.3126816,10.9991564 29.0936358,10.9054269 30.749836,10.9054269 L30.749836,15.5928391 Z M4.78114163,12.9684132 L4.78114163,29.3429562 C3.09401069,29.5313525 1.59340144,29.7497422 0,30 L0,-5.68434189e-14 L4.4690224,-5.68434189e-14 L10.562377,17.0315868 L10.562377,-5.68434189e-14 L15.2497891,-5.68434189e-14 L15.2497891,28.061674 C13.5935889,28.3437998 11.906458,28.4375293 10.1246602,28.6868498 L4.78114163,12.9684132 Z\"\n");
      out.write("                                id=\"Fill-14\">\n");
      out.write("                            </path>\n");
      out.write("                        </g>\n");
      out.write("                    </svg>\n");
      out.write("                </a>\n");
      out.write("            </div>\n");
      out.write("\t\t</div>\n");
      out.write("        <!--탑 바 -->\n");
      out.write("\t\t</div><!--해더 탑-->\n");
      out.write("        <div class=\"pinning-header on-profiles-gate\">\n");
      out.write("            <div class=\"pinning-header-container\" style=\"top: 0px;position: relative;background: transparent;\">\n");
      out.write("                <div class=\"main-header on-profiles-gate menu-navigation\" role=\"navigation\">\n");
      out.write("                    <a aria-label=\"넷플릭스\" class=\"logo icon-logoUpdate\" href=\"/browse\">\n");
      out.write("                    </a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("    <div class=\"profiles-gate-container\">\n");
      out.write("\t\t<div class=\"centered-div list-profiles-container\"> <!--프로필 전체 박스-->\n");
      out.write("\t\t\t<div class=\"list-profiles\">\n");
      out.write("\t\t\t\t<h1 class=\"profile-gate-label\">프로필 관리</h1>\n");
      out.write("\t\t\t\t<ul class=\"choose-profile\"> <!--프로필 이미지들 박스-->\n");
      out.write("\t\t\t\t");
 
					int memberID = (Integer)(session.getAttribute("member_id"));
					/* int memberId = Integer.parseInt(request.getParameter("memberId")); */
					PostViewDAO postViewDao = new PostViewDAO();
					ArrayList<StartProfileDTO> pList = postViewDao.startProfile(memberID);
					 
						for(StartProfileDTO profile :pList){
							int profile_id =profile.getProfileID();
				
      out.write("\n");
      out.write("\t\t\t\t\t<!-- 크림 프로필 박스-->\n");
      out.write("\t\t\t\t\t<li class=\"profile\"><div> \n");
      out.write("\t\t\t\t\t\t\t<a class=\"profile-link\" tabindex=\"0\" onclick=\"location.href='../index.jsp?profile_id=");
      out.print(profile_id);
      out.write("'\"\n");
      out.write("\t\t\t\t\t\t\t\tdata-uia=\"action-select-profile+primary\"><div\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"avatar-wrapper\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"profile-icon profile-edit-mode\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdata-profile-guid=\"LWO42JP6PFCNNFICWA6HOVA6F4\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t style=\"background-image: url('../images/");
      out.print(profile.getProfileImg());
      out.write("')\">\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t <div class=\"svg-edit-overlay\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"svg-icon svg-icon-edit\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\td=\"M22.2071 7.79285L15.2071 0.792847L13.7929 2.20706L20.7929 9.20706L22.2071 7.79285ZM13.2071 3.79285C12.8166 3.40232 12.1834 3.40232 11.7929 3.79285L2.29289 13.2928C2.10536 13.4804 2 13.7347 2 14V20C2 20.5522 2.44772 21 3 21H9C9.26522 21 9.51957 20.8946 9.70711 20.7071L19.2071 11.2071C19.5976 10.8165 19.5976 10.1834 19.2071 9.79285L13.2071 3.79285ZM17.0858 10.5L8.58579 19H4V14.4142L12.5 5.91417L17.0858 10.5Z\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"></path></svg>\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"profile-name\" >");
      out.print(profile.getNickname() );
      out.write("</span>\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t<div class=\"profile-children\"></div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t\t");
	
						
						 }
					
      out.write("\n");
      out.write("\t\t\t\t\t<li class=\"profile\">\n");
      out.write("                        <a class=\"link\"  >\n");
      out.write("                            <div class=\"addProfileIcon profile-icon \">  <!--프로필 추가-->\n");
      out.write("                    <i class=\"fa-solid fa-circle-plus\"></i>\n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("\t\t\t\t\t\t\t<span class=\"profile-name\">프로필 추가</span>\n");
      out.write("                        </li>\n");
      out.write("\t\t\t\t</ul><!--프로필 이지미들 박스-->\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<span data-uia=\"profile-button\"><a href=\"#\"\n");
      out.write("\t\t\t\tclass=\"profile-button preferred-action\">완료</a></span>\n");
      out.write("\t\t</div> <!--프로필 전체 박스-->\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
